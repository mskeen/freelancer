#!/bin/bash

running() {
  [ -f "./tmp/pids/$1.pid" ]
}

start_red() {
  if ! running "redis"; then
    echo "Starting Redis"
    redis-server ./config/redis.conf
    sleep 1.5s
  else
    echo "Redis already running"
  fi
}

stop_red() {
  if running "redis"; then
    echo "Stopping Redis"
    cat ./tmp/pids/redis.pid | xargs kill
  else
    echo "Redis already stopped"
  fi
}

start_sk() {
  if ! running "redis"; then
    echo "Sidekiq requires Redis"
    start_red
  fi

  if ! running "sidekiq"; then
    echo "Starting Sidekiq"
    bundle exec sidekiq -C config/sidekiq.yml
  else
    echo "Sidekiq already running"
  fi
}

stop_sk() {
  if running "sidekiq"; then
    echo "Stopping Sidekiq"
    sidekiqctl quiet ./tmp/pids/sidekiq.pid
    sidekiqctl stop ./tmp/pids/sidekiq.pid 5
  else
    echo "Sidekiq already stopped"
  fi
}

status() {
  procname=$1
  name=$2
  if running "$procname"; then
    echo "$name status: running"
  else
    echo "$name status: stopped"
  fi
}

CMD=$1
TARGET=$2
if [ -z "$1" ]; then
  CMD="status"
  echo "Commands: status, start, stop, restart, and stop redis"
fi

if [ -z "$2" ]; then
  TARGET="all"
fi

if [ "$CMD" = "status" ]; then
  status redis "Redis Daemon"
  status sidekiq "Sidekiq"
elif [ "$CMD" = "start" ]; then
  start_red
  start_sk
elif [ "$CMD" = "stop" ]; then
  if [ "$TARGET" = "redis" ]; then
    stop_red
  else
    stop_sk
  fi
elif [ "$CMD" = "restart" ]; then
  stop_sk
  start_sk
else
  echo Unknown command.  Use: status, start, stop, or restart.
fi

# echo Command: $CMD $TARGET
